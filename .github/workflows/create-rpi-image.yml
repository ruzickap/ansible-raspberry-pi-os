---
name: create-rpi-image

on:
  workflow_dispatch:

permissions: read-all

jobs:
  create-rpi-image:
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout Code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Generate network-config
        env:
          WIFI_SSID: ${{ secrets.WIFI_SSID }}
          WIFI_PASSWORD: ${{ secrets.WIFI_PASSWORD }}
        run: |
          envsubst < stage-my/00-networkmanager-config/files/wifi.nmconnection.template > "stage-my/00-networkmanager-config/files/${WIFI_SSID}.nmconnection"

      - name: Generate Raspberry Pi OS
        uses: usimd/pi-gen-action@cec66cba86bdcd23984e6a79ea4e9251d90bc798 #v1.11.0
        id: build
        with:
          # Compression to apply on final image (either "none", "zip", "xz" or "gz").
          compression: none

          # Disable the renaming of the first user during the first boot. This make it so
          # 'username' stays activated. 'username' must be set for this to work. Please be
          # aware of the implied security risk of defining a default username and password
          # for your devices.
          disable-first-boot-user-rename: 1

          # Enable SSH access to Pi.
          enable-ssh: 1

          # Final image name.
          image-name: raspios-trixie-arm64-lite-modified

          # Default keyboard keymap.
          keyboard-keymap: us

          # Default keyboard layout.
          keyboard-layout: English (US)

          # Default locale of the system image.
          locale: en_US.UTF-8

          # Password of the initial user account, locked if empty.
          # kics-scan ignore-line
          password: raspberry

          # Setting this to a value will make that value the contents of the
          # FIRST_USER_NAME's ~/.ssh/authorized_keys. Obviously the value should therefore
          # be a valid authorized_keys file. Note that this does not automatically enable
          # SSH.
          pubkey-ssh-first-user: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIF58juRs3gDSCFXARSXBBSegOmmBxXln9MVk2Zcq3HGh petr.ruzicka@gmail.com"

          # List of stage name to execute in given order. Relative and absolute paths to
          # custom stage directories are allowed here. Note that by default pi-gen exports
          # images in stage2 (lite), stage4 and stage5. You probably want to hook in custom
          # stages before one of the exported stages. Otherwise, the action will make sure
          # any custom stage will include an image export directive.
          stage-list: stage0 stage1 stage2 stage-my

          # System timezone.
          timezone: Europe/Prague

          # Wifi country code of default network to connect to.
          # wpa-country: CZ

          # SSID of a default wifi network to connect to.
          # wpa-essid: ${{ secrets.WIFI_SSID }}

          # Password of default wifi network to connect to.
          # wpa-password: ${{ secrets.WIFI_PASSWORD }}
          verbose-output: true

      - name: Encrypt build artifact
        env:
          RASPBERRY_PI_OS_IMAGE: ${{ steps.build.outputs.image-path }}
          WIFI_PASSWORD: ${{ secrets.WIFI_PASSWORD }}
        run: |
          set -euxo pipefail
          zip -9 --junk-paths --password "${WIFI_PASSWORD}" "${RASPBERRY_PI_OS_IMAGE}.zip" "${RASPBERRY_PI_OS_IMAGE}"
          ls -sh "${RASPBERRY_PI_OS_IMAGE}.zip"

      - name: Upload build artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: raspios-trixie-arm64-lite-modified.img.zip
          path: ${{ steps.build.outputs.image-path }}.zip
          if-no-files-found: error
          retention-days: 1
          compression-level: 0
          overwrite: true
