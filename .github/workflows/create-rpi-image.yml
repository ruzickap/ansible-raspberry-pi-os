---
name: create-rpi-image

on:
  workflow_dispatch:

permissions: read-all

env:
  WIFI_SSID: ${{ secrets.WIFI_SSID }}
  WIFI_PASSWORD: ${{ secrets.WIFI_PASSWORD }}

jobs:
  create-rpi-image:
    runs-on: ubuntu-latest
    steps:
      - name: Prepare stage2/04-cloud-init/files for pi-gen
        run: |
          mkdir -p stage2/04-cloud-init/files
          cat > stage2/04-cloud-init/files/user-data << EOF
          package_update: true
          package_upgrade: true
          EOF

          cat > stage2/04-cloud-init/files/network-config << EOF
          version: 2
          wifis:
            wlan0:
              dhcp4: true
              dhcp6: true
              # optional: true
              access-points:
                SSID:
                  password: "${WIFI_SSID}"
                SSID2:
                  password: "${WIFI_PASSWORD}"
          EOF

      # - name: Prepare stage4 for pi-gen
      #   run: |
      #     mkdir -p stage-wifi/00-networkmanager-config

      #     cat > stage-wifi/prerun.sh << \EOF
      #     #!/bin/bash -e

      #     if [ ! -d "${ROOTFS_DIR}" ]; then
      #       copy_previous
      #     fi
      #     EOF
      #     chmod +x stage-wifi/prerun.sh

      #     cat >> stage-wifi/00-networkmanager-config/00-run-chroot.sh << EOF
      #     #!/bin/bash -e

      #     cat > "/etc/NetworkManager/system-connections/${WIFI_SSID}.nmconnection" << EOF2
      #     [connection]
      #     id=${WIFI_SSID}
      #     uuid=5a62d13a-fdf8-4737-8f7d-f43764685207
      #     type=wifi
      #     interface-name=wlan0
      #     autoconnect-retries=0

      #     [wifi]
      #     mode=infrastructure
      #     ssid=${WIFI_SSID}

      #     [wifi-security]
      #     auth-alg=open
      #     key-mgmt=wpa-psk
      #     psk=${WIFI_PASSWORD}

      #     [ipv4]
      #     method=auto

      #     [ipv6]
      #     addr-gen-mode=default
      #     method=auto
      #     EOF2
      #     chmod 600 "/etc/NetworkManager/system-connections/${WIFI_SSID}.nmconnection"
      #     EOF
      #     chmod a+x stage-wifi/00-networkmanager-config/00-run-chroot.sh

      - name: Generate Raspberry Pi OS
        uses: usimd/pi-gen-action@cec66cba86bdcd23984e6a79ea4e9251d90bc798 #v1.11.0
        id: build
        with:
          # Compression to apply on final image (either "none", "zip", "xz" or "gz").
          compression: none

          # Disable the renaming of the first user during the first boot. This make it so
          # 'username' stays activated. 'username' must be set for this to work. Please be
          # aware of the implied security risk of defining a default username and password
          # for your devices.
          disable-first-boot-user-rename: 1

          # Enable SSH access to Pi.
          enable-ssh: 1

          # Final image name.
          image-name: raspios-trixie-arm64-lite-modified

          # Default keyboard keymap.
          keyboard-keymap: us

          # Default keyboard layout.
          keyboard-layout: English (US)

          # Default locale of the system image.
          locale: en_US.UTF-8

          # Password of the intial user account, locked if empty.
          # kics-scan ignore-line
          password: raspberry

          # Setting this to a value will make that value the contents of the
          # FIRST_USER_NAME's ~/.ssh/authorized_keys. Obviously the value should therefore
          # be a valid authorized_keys file. Note that this does not automatically enable
          # SSH.
          pubkey-ssh-first-user: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIF58juRs3gDSCFXARSXBBSegOmmBxXln9MVk2Zcq3HGh petr.ruzicka@gmail.com"

          # List of stage name to execute in given order. Relative and absolute paths to
          # custom stage directories are allowed here. Note that by default pi-gen exports
          # images in stage2 (lite), stage4 and stage5. You probably want to hook in custom
          # stages before one of the exported stages. Otherwise, the action will make sure
          # any custom stage will include an image export directive.
          # stage-list: stage0 stage1 stage2 ./stage-wifi

          # System timezone.
          timezone: Europe/Prague

          # Name of the initial user account.
          username: pi

          # Wifi country code of default network to connect to.
          wpa-country: CZ
          verbose-output: true

      - name: Encrypt build artifact
        env:
          WIFI_PASSWORD: ${{ secrets.WIFI_PASSWORD }}
          RASPBERRY_PI_OS_IMAGE: ${{ steps.build.outputs.image-path }}
        run: |
          set -euxo pipefail
          zip -9 --junk-paths --password "${WIFI_PASSWORD}" "${RASPBERRY_PI_OS_IMAGE}.zip" "${RASPBERRY_PI_OS_IMAGE}"
          ls -sh "${RASPBERRY_PI_OS_IMAGE}"*

      - name: Upload build artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: raspios-trixie-arm64-lite-modified.img.zip
          path: ${{ steps.build.outputs.image-path }}.zip
          if-no-files-found: error
          retention-days: 1
          compression-level: 0
          overwrite: true
