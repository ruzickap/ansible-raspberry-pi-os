{
  $schema: "https://docs.renovatebot.com/renovate-schema.json",
  // Keep the extends started with ":" at the end of the list to allow overriding
  extends: [
    "config:recommended",
    "docker:pinDigests",
    "helpers:pinGitHubActionDigestsToSemver",
    "security:openssf-scorecard",
    ":disableDependencyDashboard",
    ":disableRateLimiting",
    ":docker",
    ":enableVulnerabilityAlertsWithLabel(security)",
    ":pinSkipCi",
  ],
  "git-submodules": {
    enabled: true,
  },
  labels: [
    "renovate",
    "renovate/{{replace '.*/' '' depName}}",
    "renovate/{{updateType}}",
  ],
  lockFileMaintenance: {
    enabled: true,
    schedule: ["before 6am on Sunday"],
  },
  packageRules: [
    {
      matchUpdateTypes: ["major"],
      automerge: false,
    },
    {
      description: "Ignore frequent renovate updates",
      enabled: false,
      matchPackageNames: ["renovatebot/github-action"],
      matchUpdateTypes: ["patch"],
    },
    {
      description: "Update renovatebot/github-action minor updates on Sundays",
      matchPackageNames: ["renovatebot/github-action"],
      matchUpdateTypes: ["minor"],
      schedule: ["* * * * 0"],
    },
    {
      automerge: true,
      commitBody: "[skip ci]",
      description: "Automerge all patch, pin and digest updates for custom.regex without running any tests",
      ignoreTests: true,
      matchManagers: ["custom.regex"],
      matchUpdateTypes: ["patch", "pin", "digest"],
    },
  ],
  prBodyTemplate: "{{{table}}}{{{notes}}}{{{changelogs}}}",
  rebaseWhen: "behind-base-branch",
  customManagers: [
    {
      description: 'Regular expressions inside md, YAML, Dockerfile or entrypoint.sh looking for "# renovate:" comments',
      customType: 'regex',
      extractVersionTemplate: "{{#if extractVersion}}{{{extractVersion}}}{{else}}^v?(?<version>.+)${{/if}}",
      fileMatch: ["\\.ya?ml$", "\\.md$", "^Dockerfile$", "^entrypoint\\.sh$"],
      matchStrings: [
        '# renovate: datasource=(?<datasource>.+?) depName=(?<depName>.+?)( versioning=(?<versioning>.+?))?( extractVersion=(?<extractVersion>.+?))?( registryUrl=(?<registryUrl>.+?))?\\s.*[=:]\\s*"?(?<currentValue>.+?)"?\\s',
      ],
      versioningTemplate: "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}",
    },
  ],
  separateMinorPatch: true,
}
