- name: Set authorized key for backup script
  authorized_key:
    user: root
    key: "{{ lookup('file', lookup('env','HOME') + '/Documents/backups/id_ed25519.pub') }}"

- name: Disable swap
  command: dphys-swapfile swapoff
  changed_when: false

- name: Add kodi group
  group:
    name: kodi

- name: Add kodi user
  user:
    name: kodi
    comment: Kodi
    shell: /usr/bin/sh
    groups: audio,input,uucp,video
    group: kodi

- name: Mount USB disk
  mount:
    path: /mnt/usb
    src: /dev/sda1
    fstype: ext4
    opts: noatime,nodiratime
    state: mounted

- name: Enable hd-idle
  ini_file:
    path: /etc/default/hd-idle
    no_extra_spaces: yes
    section: null
    option: HD_IDLE_OPTS
    value: '"-i 600 -a /dev/sda"'
  notify: restart hd-idle

#################################################
# log2ram
#################################################

- name: Add an Apt signing keys
  apt_key:
    url: "{{ item }}"
  loop:
    - https://azlux.fr/repo.gpg.key

- name: Add log2ram repository
  apt_repository:
    repo: deb http://packages.azlux.fr/debian/ bullseye main
    filename: azlux

- name: Install log2ram
  apt:
    name: log2ram
    install_recommends: no
  register: result
  until: result is succeeded

#################################################
# Samba
#################################################

- name: Configure Samba (smb.conf)
  template:
    dest: /etc/samba/smb.conf
    src: files/etc/samba/smb.conf.j2
  notify: restart samba

- name: Create local credential file for smaba
  delegate_to: localhost
  copy:
    dest: "{{ lookup('env','HOME') }}/Documents/secrets/{{ inventory_hostname }}-cifs-credentials"
    content: |
      [{{ inventory_hostname }}]
      username=pi
      password={{ samba_pi_password }}
    mode: 0600
    owner: "{{ lookup('env','USER') }}"

- name: Set SMB password for pi
  shell: ( echo {{ samba_pi_password }} ; echo {{ samba_pi_password }} ) | smbpasswd -a -s pi
  changed_when: false

#################################################
# Transmission (http://raspi.xvx.cz:9091/web/)
#################################################

- name: Create "torrent" directories in /mnt/
  file:
    path: "{{ item }}"
    recurse: yes
    state: directory
    owner: debian-transmission
    group: debian-transmission
    mode: 0775
  loop:
    - /mnt/usb/torrents/torrents-completed
    - /mnt/usb/torrents/torrents-incomplete

- name: Configure Transmission
  template:
    dest: /etc/transmission-daemon/settings.json
    src: files/etc/transmission-daemon/settings.json.j2
  notify: reload transmission

- name: Install blacklist file for transmission
  unarchive:
    src: "{{ transmission_blocklist_url }}&archiveformat=zip"
    dest: /var/lib/transmission-daemon/info/blocklists/
    owner: debian-transmission
    group: debian-transmission
    remote_src: yes

- name: Install Transmission torrent done script
  template:
    dest: /etc/transmission-daemon/torrent-done.sh
    src: files/etc/transmission-daemon/torrent-done.sh.j2
    mode: 0755

- name: Add user 'pi' to debian-transmission group
  user:
    name: pi
    append: yes
    groups: debian-transmission

#################################################
# Plex
#################################################

- name: Add an Apt signing keys
  apt_key:
    url: "{{ item }}"
  loop:
    - https://downloads.plex.tv/plex-keys/PlexSign.key

- name: Add Plex repository
  apt_repository:
    repo: deb https://downloads.plex.tv/repo/deb public main
    filename: plexmediaserver

- name: Install Plex
  apt:
    name: plexmediaserver
    install_recommends: no
  register: result
  until: result is succeeded

#################################################
# Kodi
#################################################

- name: Create sudoers file for Kodi
  copy:
    src: etc/sudoers.d/020_kodi
    dest: /etc/sudoers.d/020_kodi
  register: kodi_service

- name: Create startup script for Kodi
  copy:
    src: lib/systemd/system/kodi.service
    dest: /lib/systemd/system/kodi.service
  register: kodi_service

- name: Reload systemd
  systemd:
    daemon_reload: yes
  when: kodi_service.changed

- name: Create Kodi addon directory (/home/kodi/.kodi/addons)
  file:
    path: /home/kodi/.kodi/addons
    state: directory
    recurse: yes
    owner: kodi
    group: kodi

- name: Get the latest version of YouTube Kodi plugin
  uri:
    url: https://api.github.com/repos/anxdpanic/plugin.video.youtube/releases/latest
  register: github_api_youtube_kodi_plugin

- name: Download and unpack the YouTube Kodi plugin
  unarchive:
    src: "{{ github_api_youtube_kodi_plugin.json.assets[0].browser_download_url }}"
    dest: /home/kodi/.kodi/addons/
    remote_src: yes
    creates: /home/kodi/.kodi/addons/plugin.video.youtube

- name: Copy Kodi configuration files
  synchronize:
    src: home/kodi/.kodi
    dest: /home/kodi/
  notify: restart kodi

- name: Additional Kodi configuration
  template:
    dest: "{{ item.dest }}"
    src: "{{ item.src }}"
    mode: 0600
  loop:
    - dest: /home/kodi/.kodi/userdata/guisettings.xml
      src: files/home/kodi/.kodi/userdata/guisettings.xml.j2

- name: Chown "/home/kodi"
  file:
    path: /home/kodi
    owner: kodi
    group: kodi
    recurse: yes
  changed_when: false

# It happens sometimes, that the Kodi don't start for the first time - SubState": "dead"
- name: Start Kodi
  systemd:
    name: kodi
    state: started
    enabled: yes
  register: result
  until: result.status.SubState == "running"

- name: Wait for Kodi to be started
  wait_for:
    port: 8080

- name: Enable YouTube Kodi plugin in database
  command: sqlite3 /home/kodi/.kodi/userdata/Database/Addons33.db "UPDATE installed SET enabled = 1 WHERE addonID = 'plugin.video.youtube'"
  register: result
  until: result is succeeded
  delay: 10
  changed_when: false

- name: Enable Kodi Visualization addon spectrum
  command: sqlite3 /home/kodi/.kodi/userdata/Database/Addons33.db "UPDATE installed SET enabled = 1 WHERE addonID = '{{ item }}'"
  loop:
    - visualization.spectrum
  register: result
  until: result is succeeded
  delay: 10
  changed_when: false

- name: Set content for Music
  command: sqlite3 /home/kodi/.kodi/userdata/Database/MyMusic82.db "INSERT OR IGNORE INTO path VALUES(1,'/mnt/usb/music/','12aa680d4b25256c69b20c0591b57e72');"
  register: result
  until: result is succeeded
  delay: 10
  changed_when: false
