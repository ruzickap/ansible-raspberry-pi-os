---
- name: Set timezone to Europe/Prague
  timezone:
    name: "{{ timezone }}"

- name: Set hostname
  hostname:
    name: "{{ inventory_hostname }}"

- name: Add hostname to '/etc/hosts'
  lineinfile:
    dest: /etc/hosts
    regexp: '.*{{ inventory_hostname }}.*'
    line: "{{ ansible_default_ipv4.address }} {{ inventory_hostname }}"
  when: ansible_default_ipv4.address is defined

- name: Configure NTP
  ini_file:
    path: /etc/systemd/timesyncd.conf
    no_extra_spaces: yes
    section: Time
    option: NTP
    value: "{{ ntp_server }}"

- name: Copy sshd keys to /etc/ssh/
  copy:
    src: files/etc/ssh/{{ inventory_hostname }}/
    dest: /etc/ssh/
    mode: 0600
  notify: restart sshd

- name: Create /etc/systemd/journald.conf.d directory
  file:
    path: /etc/systemd/journald.conf.d
    state: directory

- name: Forward journald to /dev/tty12
  ini_file:
    path: /etc/systemd/journald.conf.d/fw-tty12.conf
    no_extra_spaces: yes
    section: Journal
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  loop:
    - option: ForwardToConsole
      value: "yes"
    - option: TTYPath
      value: /dev/tty12
    - option: MaxLevelConsole
      value: info
  notify: reload systemd

- name: Configure journald
  ini_file:
    path: /etc/systemd/journald.conf.d/journal-size.conf
    section: Journal
    option: SystemMaxUse
    value: 1M
  notify: reload systemd

- name: Configure .bashrc for root
  blockinfile:
    dest: /root/.bashrc
    block: |
      PS1='\[\033[01;31m\]\h\[\033[01;34m\] \w #\[\033[00m\] '
      alias ll='ls -l --color=auto'
      alias mynmon='tmux new-session "NMON=tl nmon -s 3" \; split-window "NMON=ndcDt5 nmon -s 3" \; select-layout even-horizontal \; set-option status off'

- name: Switch keyboard layout to US
  ini_file:
    path: /etc/default/keyboard
    section: null
    no_extra_spaces: yes
    option: XKBLAYOUT
    value: us

- name: Add the modules module
  modprobe:
    name: "{{ item }}"
  loop: "{{ enable_kernel_modules }}"

- name: Load modules during boot
  copy:
    dest: /etc/modules-load.d/{{ item }}.conf
    content: |
      {{ item }}
  loop: "{{ enable_kernel_modules }}"

- name: Change params in /boot/config.txt
  blockinfile:
    path: /boot/config.txt
    block: "{{ boot_config_parameters }}"
  notify: reboot

- name: Enable watchdog
  ini_file:
    path: /etc/systemd/system.conf
    no_extra_spaces: yes
    section: "Manager"
    option: "RuntimeWatchdogSec"
    value: "10"
  notify: reload systemd

- name: Update all packages
  apt:
    name: "*"
    state: latest
    install_recommends: no
    update_cache: yes
  register: result
  until: result is succeeded

- name: Install packages
  apt:
    name: "{{ rpi_packages }}"
    install_recommends: no
  register: result
  until: result is succeeded

- name: Install additional packages
  apt:
    name: "{{ rpi_packages_additional }}"
    install_recommends: no

- name: Stop services and disable them
  systemd:
    name: "{{ item }}"
    state: stopped
    enabled: no
  loop: "{{ rpi_disable_boot_services }}"

- name: Create directory for mc inside /etc/skel
  file:
    path: /etc/skel/.config/mc/
    state: directory
    mode: 0700

- name: Create /etc/skel/.config/mc/ini file
  ini_file:
    path: /etc/skel/.config/mc/ini
    no_extra_spaces: yes
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  loop:
    - section: Midnight-Commander
      option: auto_save_setup
      value: 'false'
    - section: Midnight-Commander
      option: drop_menus
      value: 'true'
    - section: Midnight-Commander
      option: editor_return_does_auto_indent
      value: 'false'
    - section: Layout
      option: keybar_visible
      value: 'false'
    - section: Layout
      option: menubar_visible
      value: 'false'
    - section: Layout
      option: message_visible
      value: 'false'
    - section: Panels
      option: navigate_with_arrows
      value: 'true'

- name: Copy mc configuration to root direcotry
  copy:
    src: /etc/skel/.config
    dest: /root/
    remote_src: yes

- name: Copy mc configuration to pi home direcotry
  copy:
    src: /etc/skel/.config
    dest: /home/pi/
    owner: pi
    group: pi
    remote_src: yes

- name: Put "mc" alias into /etc/profile.d/my-mc.sh
  copy:
    dest: /etc/profile.d/my-mc.sh
    content: |
      [ -n "${BASH_VERSION}${KSH_VERSION}${ZSH_VERSION}" ] || return 0
      alias mc='. /usr/lib/mc/mc-wrapper.sh --nomouse'

- name: Tweak vim
  copy:
    dest: /etc/vim/vimrc.local
    content: |
      set laststatus=2
      set statusline=%F%m%r%h%w\ (%{&ff}){\%Y}[%l,%v][%p%%]\ %{strftime(\"%d/%m/%y\ -\ %H:%M\")}
      set ttymouse=

- name: Tweak logrotate (/etc/logrotate.conf)
  blockinfile:
    dest: /etc/logrotate.conf
    insertafter: "^create"
    block: |
      compress
      compresscmd /usr/bin/xz
      compressoptions -9
      uncompresscmd /usr/bin/unxz
      compressext .xz

- name: Configure dma auth.conf
  lineinfile:
    path: /etc/dma/auth.conf
    regexp: ".*|smtp.gmail.com:.*"
    line: "{{ smtp_gmail_auth_user }}|smtp.gmail.com:{{ smtp_gmail_auth_password }}"

- name: Configure dma dma.conf
  blockinfile:
    dest: /etc/dma/dma.conf
    block: |
      SMARTHOST smtp.gmail.com
      PORT 587
      AUTHPATH /etc/dma/auth.conf
      SECURETRANSFER
      STARTTLS
      INSECURE

- name: Configure /etc/aliases
  copy:
    dest: /etc/aliases
    content: "root:           petr.ruzicka@gmail.com"

- name: Configure email notification after reboot
  template:
    dest: /etc/rc.local
    src: files/etc/rc.local.j2

- name: Modify Unattended upgrade settings
  replace:
    dest: /etc/apt/apt.conf.d/50unattended-upgrades
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
  loop:
    - { regexp: '^(\s*"origin=Debian,codename=.*)', replace: '//\1' }
    - { regexp: '^//Unattended-Upgrade::Mail "";', replace: 'Unattended-Upgrade::Mail "root";' }
    - { regexp: '^//Unattended-Upgrade::Remove-Unused-Dependencies "false";', replace: 'Unattended-Upgrade::Remove-Unused-Dependencies "true";' }

- name: Add Raspbian to /etc/apt/apt.conf.d/50unattended-upgrades
  blockinfile:
    path: /etc/apt/apt.conf.d/50unattended-upgrades
    marker: "// {mark} ANSIBLE MANAGED BLOCK"
    insertafter: "^Unattended-Upgrade::Origins-Pattern"
    block: |2
              "origin=*";
              "origin=Raspbian,codename=${distro_codename},label=Raspbian";
              "origin=Raspberry Pi Foundation,codename=${distro_codename},label=Raspberry Pi Foundation";

- name: Install bcmstat.sh script
  get_url:
    dest: /usr/local/bin/
    url: https://raw.githubusercontent.com/MilhouseVH/bcmstat/master/bcmstat.sh
    mode: 0755

- name: Autoremove unused packages
  apt:
    autoremove: yes

- name: Run all hanlers
  meta: flush_handlers
